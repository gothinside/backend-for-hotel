"""comment

Revision ID: f36e8291d2ea
Revises: 
Create Date: 2024-08-09 09:53:51.497505

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f36e8291d2ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('category_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('beds', sa.Integer(), nullable=False),
                    sa.Column('tables', sa.Integer(), nullable=False),
                    sa.Column('is_tv', sa.Boolean(), nullable=False),
                    sa.Column('is_wifi', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_categories_category_name'),
                    'categories', ['category_name'], unique=True)
    op.create_table('clients',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('first_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('last_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('phone_number', sa.String(
                        length=20), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_clients_phone_number'),
                    'clients', ['phone_number'], unique=True)
    op.create_table('payments',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('amount', sa.Integer(), nullable=False),
                    sa.Column('payment_date', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('roles',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('role_name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('role_name')
                    )
    op.create_table('services',
                    sa.Column('service_id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('service_name', sa.String(
                        length=255), nullable=False),
                    sa.Column('service_price', sa.Integer(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('service_id')
                    )
    op.create_index(op.f('ix_services_service_name'),
                    'services', ['service_name'], unique=True)
    op.create_table('users',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('password_hash', sa.String(
                        length=1000), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users',
                    ['is_active'], unique=False)
    op.create_table('client_user',
                    sa.Column('client_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['client_id'], ['clients.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('client_id', 'user_id')
                    )
    op.create_table('rooms',
                    sa.Column('room_num', sa.Integer(), nullable=False),
                    sa.Column('category_id', sa.Integer(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['categories.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('room_num')
                    )
    op.create_table('user_role',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['role_id'], ['roles.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('user_id', 'role_id')
                    )
    op.create_table('bookings',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('join_date', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('out_date', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('room_num', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['room_num'], ['rooms.room_num'], ondelete='Cascade'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('booking_payment',
                    sa.Column('booking_id', sa.Integer(), nullable=False),
                    sa.Column('payment_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['booking_id'], ['bookings.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['payment_id'], ['payments.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('booking_id', 'payment_id')
                    )
    op.create_table('booking_service',
                    sa.Column('booking_id', sa.Integer(), nullable=False),
                    sa.Column('service_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['booking_id'], ['bookings.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['service_id'], ['services.service_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('booking_id', 'service_id')
                    )
    op.create_table('client_booking',
                    sa.Column('client_id', sa.Integer(), nullable=False),
                    sa.Column('booking_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['booking_id'], ['bookings.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['client_id'], ['clients.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('client_id', 'booking_id')
                    )
    op.execute("INSERT INTO roles VALUES(1, 'ROLE_USER') ON CONFLICT DO NOTHING")
    op.execute("INSERT INTO roles VALUES(2, 'ROLE_AMDIN') ON CONFLICT DO NOTHING")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('client_booking')
    op.drop_table('booking_service')
    op.drop_table('booking_payment')
    op.drop_table('bookings')
    op.drop_table('user_role')
    op.drop_table('rooms')
    op.drop_table('client_user')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_services_service_name'), table_name='services')
    op.drop_table('services')
    op.drop_table('roles')
    op.drop_table('payments')
    op.drop_index(op.f('ix_clients_phone_number'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_categories_category_name'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
